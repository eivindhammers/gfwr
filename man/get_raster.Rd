% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_raster.R
\name{get_raster}
\alias{get_raster}
\title{Base function to get raster from API and convert response to data frame}
\usage{
get_raster(
  data = "AIS",
  spatial_resolution = NULL,
  temporal_resolution = NULL,
  group_by = NULL,
  filter_by = NULL,
  start_date = NULL,
  end_date = NULL,
  region = NULL,
  region_source = NULL,
  key = gfw_auth(),
  print_request = FALSE
)
}
\arguments{
\item{data}{"AIS" for AIS-based fishing effort or "SAR" for SAR vessel presence}

\item{spatial_resolution}{raster spatial resolution. Can be "LOW" = 0.1 degree
or "HIGH" = 0.01 degree}

\item{temporal_resolution}{raster temporal resolution. Can be 'HOURLY',
'DAILY', 'MONTHLY', 'YEARLY'}

\item{group_by}{parameter to group by. Can be 'VESSEL_ID', 'FLAG', 'GEARTYPE',
'FLAGANDGEARTYPE' or 'MMSI'. Optional.}

\item{filter_by}{parameter to filter by.}

\item{start_date}{Start of date range to search events, in YYYY-MM-DD format and including this date}

\item{end_date}{End of date range to search events, in YYYY-MM-DD format and excluding this date}

\item{region}{sf shape to filter raster or GFW region code (such as a
Marine Regions Geographic Identifier or EEZ code).}

\item{region_source}{source of the region ('EEZ','MPA', 'RFMO' or 'USER_SHAPEFILE')}

\item{key}{Authorization token. Can be obtained with \code{gfw_auth()} function}

\item{print_request}{Boolean. Whether to print the request, for debugging
purposes. When contacting the GFW team it will be useful to send this string}
}
\description{
Base function to get raster from API and convert response to data frame
}
\examples{
\dontrun{
library(gfwr)
# using region codes
code_eez <- get_region_id(region_name = 'CIV', region_source = 'EEZ',
key = gfw_auth())
get_raster(spatial_resolution = 'LOW',
           temporal_resolution = 'YEARLY',
           group_by = 'FLAG',
           start_date = "2021-01-01",
           end_date = "2021-10-01",
           region = code_eez$id,
           region_source = 'EEZ',
           key = gfw_auth(),
           print_request = TRUE)
#using a sf from disk /loading a test sf object
data(test_shape)
get_raster(spatial_resolution = 'LOW',
            temporal_resolution = 'YEARLY',
            start_date = '2021-01-01',
            end_date = '2021-10-01',
            region = test_shape,
            region_source = 'USER_SHAPEFILE',
            key = gfw_auth(),
            print_request = TRUE)
}
# sar-presence
area <- sf::st_bbox(c(xmin = -79, xmax = -76, ymin = 1, ymax = 8), crs = 4326) |>
  sf::st_as_sfc() |>
  sf::st_as_sf()
gfw_dat <- get_raster(data = "SAR",
                      spatial_resolution = 'LOW',
                      temporal_resolution = 'YEARLY',
                      group_by = 'GEARTYPE',
                      start_date = '2021-01-01',
                      end_date = '2022-01-01',
                      region = area,
                      region_source = 'USER_SHAPEFILE',
                      #region_source = 'USER_JSON',
                      key = gfw_auth())
}
